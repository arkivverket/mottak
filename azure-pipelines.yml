# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

variables:
    DOCKER_BUILDKIT: 1  

steps:
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: arkivverket

  - task: Docker@2
    displayName: Build Arkade
    inputs:
      containerRegistry: arkivverket
      repository: mottak/arkade5
      command: buildAndPush
      Dockerfile: arkade5/Dockerfile

  - task: Docker@2
    displayName: Build invitation
    inputs:
      containerRegistry: arkivverket
      repository: mottak/invitation
      command: buildAndPush
      Dockerfile: invitation/Dockerfile
  
  - task: Docker@2
    displayName: Build log service
    inputs:
      containerRegistry: arkivverket
      repository: mottak/log
      command: buildAndPush
      Dockerfile: log/Dockerfile

  - task: Docker@2
    displayName: Build mailer
    inputs:
      containerRegistry: arkivverket
      repository: mottak/mailer
      command: buildAndPush
      Dockerfile: mailer/Dockerfile

  - task: Docker@2
    displayName: Build checksum service
    inputs:
      containerRegistry: arkivverket
      repository: mottak/s3-checksum256
      command: buildAndPush
      Dockerfile: s3-checksum256/Dockerfile

  - task: Docker@2
    displayName: Build delete service
    inputs:
      containerRegistry: arkivverket
      repository: mottak/s3-delete
      command: buildAndPush
      Dockerfile: s3-delete/Dockerfile

  - task: Docker@2
    displayName: Build AV scanner
    inputs:
      containerRegistry: arkivverket
      repository: mottak/s3-scan-tar
      command: buildAndPush
      Dockerfile: s3-scan-tar/Dockerfile

  - task: Docker@2
    displayName: Build tusd container
    inputs:
      containerRegistry: arkivverket
      repository: mottak/tusd
      command: buildAndPush
      Dockerfile: tusd/Dockerfile

